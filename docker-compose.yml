version: '3.8'

services:
  mcp-server:
    build: .
    container_name: mcp-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./sandbox:/app/sandbox
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
      - DB_PATH=/app/data/mcp-db.sqlite
      - LOG_FILE=/app/logs/mcp-server.log
      - SANDBOX_DIR=/app/sandbox
      - MAX_REQUEST_SIZE=1mb
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - MAX_FILE_SIZE_MB=10
      # Uncomment and set your OpenWeather API key
      # - OPENWEATHER_API_KEY=your_api_key_here
    healthcheck:
      test: ["CMD", "node", "dist/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Uncomment to add Prometheus and Grafana for monitoring
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   depends_on:
  #     - mcp-server

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - prometheus

# Uncomment if using Grafana
# volumes:
#   grafana-storage:
